{"version":3,"sources":["views/Login.js","views/Buscador.js","views/App.js","serviceWorker.js","index.js","images/logo.svg","css/App.module.css","images/Tweelock.svg","images/Analisis.svg","css/Buscador.module.css"],"names":["Component","filtroLocation","Buscador","props","handleChange","event","setState","usuario","target","value","handleClose","modalAviso","modalError","mensajeError","handleAnalisis","name","screen_name","count","vistaAnalisis","state","tweets","nombreUsuario","objetoUsuario","screenname","axios","post","then","res","console","log","JSON","stringify","data","catch","error","buscarUsuarios","parametrosJSON","username","loading","usuarios","arregloTemporal","forEach","i","length","location","includes","push","set","Set","map","arregloSinDuplicaciones","Array","from","parse","twitterUsers","analyticsView","className","styles","contenedorAnalisis","Row","buttonRegresar","Col","sm","columnaBotonRegresar","Button","variant","onClick","columnaTitulo","tituloAnalisis","columnaAnalisis","src","analisis","imagenAnalisis","alt","tablaAnalisis","Table","striped","bordered","hover","tweet","tweetId","user","msg","classification","tag_name","usersTable","id_str","this","container","header","columnaLogo","tweelock","imgLogo","columnaBuscador","Form","Control","type","placeholder","onChange","columnaBoton","Spinner","animation","body","Modal","show","onHide","Header","closeButton","Title","Body","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.4d793ed5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\nimport { Redirect } from 'react-router-dom'\nimport { Modal } from 'react-bootstrap'\nimport 'react-tabs/style/react-tabs.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios'\n\nimport logo from '../images/logo.svg';\nimport styles from '../css/App.module.css';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      registrarse: false,\n      nombre: '',\n      apellidoPaterno: '',\n      apellidoMaterno: '',\n      email: '',\n      passwd: '',\n      passwdconfirm: '',\n      username: '',\n      password: '',\n      tipoError: '',\n      modalRegistro: false,\n      modalSesion: false,\n      modalHeader: '',\n      modalMessage: '',\n      ruta: '',\n    }\n  }\n\n  activaRegistro = () => {\n    this.setState({ registrarse: true });\n  }\n\n  handleNombre = (event) => {\n    const { value } = event.target\n    this.setState({ nombre: value, tipoError: '' })\n  }\n\n  handlePaterno = (event) => {\n    const { value } = event.target\n    this.setState({ apellidoPaterno: value, tipoError: '' })\n  }\n\n  handleMaterno = (event) => {\n    const { value } = event.target\n    this.setState({ apellidoMaterno: value, tipoError: '' })\n  }\n\n  handleEmail = (event) => {\n    const { value } = event.target\n    this.setState({ email: value, tipoError: '' })\n  }\n\n  handlePasswd = (event) => {\n    const { value } = event.target\n    this.setState({ passwd: value, tipoError: '' })\n  }\n\n  handlePassConfirm = (event) => {\n    const { value } = event.target\n    this.setState({ passwdconfirm: value, tipoError: '' })\n  }\n\n  handleUser = (event) => {\n    const { value } = event.target\n    this.setState({ username: value, tipoError: '' })\n  }\n\n  handlePass = (event) => {\n    const { value } = event.target\n    this.setState({ password: value, tipoError: '' })\n  }\n\n  handleClose = () => {\n    this.setState({\n      modalRegistro: false,\n      nombre: '',\n      apellidoPaterno: '',\n      apellidoMaterno: '',\n      email: '',\n      passwd: '',\n      passwdconfirm: '',\n    })\n  }\n\n  handleCloseSesion = () => {\n    this.setState({ modalSesion: false })\n  }\n\n  validarRegistro = () => {\n    const {\n      nombre,\n      apellidoPaterno,\n      apellidoMaterno,\n      email,\n      passwd,\n      passwdconfirm,\n    } = this.state\n    const textoValido = /^[A-Za-z ÁÉÍÓÚÑÜÀÈáéíóúñüàè]+$/\n    const correoValido = /^\\w+([\\.\\+\\-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/\n    const validarPass = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&_-])[A-Za-z\\d$@$!%*?&]/\n\n    // Validaciones\n    if (nombre.length === 0) {\n      this.setState({ tipoError: 'El nombre es un campo obligatorio.' })\n    } else if (!textoValido.test(nombre)) {\n      this.setState({ tipoError: 'El nombre no debe de contener números, ni símbolos raros.' })\n    } else if (apellidoPaterno.length === 0) {\n      this.setState({ tipoError: 'El apellido paterno es un campo obligatorio.' })\n    } else if (!textoValido.test(apellidoPaterno)) {\n      this.setState({ tipoError: 'El apellido paterno no debe de contener números, ni símbolos raros.' })\n    } else if (apellidoMaterno.length === 0) {\n      this.setState({ tipoError: 'El apellido materno es un campo obligatorio.' })\n    } else if (!textoValido.test(apellidoMaterno)) {\n      this.setState({ tipoError: 'El apellido materno no debe de contener números, ni símbolos raros.' })\n    } else if (!correoValido.test(email)) {\n      this.setState({ tipoError: 'El correo electrónico no es válido.' })\n    } else if (passwd.length < 8) {\n      this.setState({ tipoError: 'La contraseña debe de ser mínimo de 8 caracteres.' })\n    } else if(!validarPass.test(passwd)) {\n      this.setState({ tipoError: 'La contraseña debe de contener al menos 1 letra en mayúsculas, 1 letra en minúsculas, 1 número y 1 carácter especial.' })\n    } else if(passwdconfirm !== passwd) {\n      this.setState({ tipoError: 'Las contraseñas no son iguales.' })\n    } else {\n      const usuario = {\n        nombre: nombre,\n        apellidoPaterno: apellidoPaterno,\n        apellidoMaterno: apellidoMaterno,\n        email: email,\n        password: passwd,\n      }\n      axios.post('http://localhost:8000/registrarUsuario', usuario)\n        .then((response) => {\n          console.log(response.data)\n          this.setState({ modalRegistro: true, modalMessage: response.data })\n        }).catch(error => {\n          console.log(error)\n          this.setState({ modalRegistro: true, modalMessage: error })\n        })\n    }\n  }\n\n  iniciarSesion = () => {\n    const {\n      username,\n      password,\n    } = this.state\n    console.log(\"Ejecutando funcion iniciarSesion\")\n    if (username.length === 0) {\n      this.setState({ tipoError: 'El email de usuario es requerido.' })\n    } else if (password.length === 0) {\n      this.setState({ tipoError: 'La contraseña es requerida.' })\n    } else {\n      axios.get(`http://localhost:8000/verificarUsuario/${username}&${password}`)\n        .then((response) => {\n          console.log(response.data)\n          if (response.data === 'Usuario no registrado en el sistema.') {\n            this.setState({ modalSesion: true, modalHeader: 'No existe usuario', modalMessage: response.data, ruta: '' })\n          } else {\n            this.setState({ modalSesion: true, modalHeader: 'Inicio de sesión exitoso', modalMessage: response.data, ruta: 'redirect' })\n          }\n        }).catch(error => console.log(error))\n    }\n  }\n\n  login = () => {\n    const {\n      username,\n      password,\n      tipoError,\n      ruta,\n    } = this.state\n    return (\n      <div>\n        <form>\n          {\n            (tipoError === '') ? null : <div><p className={styles.error}>{tipoError}</p></div>\n          }\n          <div>\n            <input type=\"text\" value={username} className={styles.username} placeholder=\"email\" onChange={this.handleUser} />\n          </div>\n          <div>\n            <input type=\"password\" value={password} className={styles.password} placeholder=\"contraseña\" onChange={this.handlePass}/>\n          </div>\n          <div className={styles.contenedorSubmit}>\n              {\n                  (ruta !== '') ? <Redirect to=\"/Buscador\" /> : <a className={styles.btnSubmit} onClick={this.iniciarSesion}>Iniciar</a>\n              }\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  registro = () => {\n    const {\n      nombre,\n      apellidoPaterno,\n      apellidoMaterno,\n      email,\n      passwd,\n      passwdconfirm,\n      tipoError,\n    } = this.state\n    return (\n      <div>\n        <form>\n          {\n            (tipoError === '') ? null : <div><p className={styles.error}>{tipoError}</p></div>\n          }\n          <div>\n            <input type=\"text\" value={nombre} className={styles.field} placeholder=\"Nombre\" onChange={this.handleNombre}/>\n          </div>\n          <div>\n            <input type=\"text\" value={apellidoPaterno} className={styles.field} placeholder=\"Apellido Paterno\" onChange={this.handlePaterno}/>\n          </div>\n          <div>\n            <input type=\"text\" value={apellidoMaterno} className={styles.field} placeholder=\"Apellido Materno\" onChange={this.handleMaterno}/>\n          </div>\n          <div>\n            <input type=\"email\" value={email} className={styles.field} placeholder=\"Email\" onChange={this.handleEmail}/>\n          </div>\n          <div>\n            <input type=\"password\" value={passwd} className={styles.field} placeholder=\"Contraseña\" onChange={this.handlePasswd}/>\n          </div>\n          <div>\n            <input type=\"password\" value={passwdconfirm} className={styles.field} placeholder=\"Confirmar contraseña\" onChange={this.handlePassConfirm}/>\n          </div>\n          <div className={styles.contenedorSubmit}>\n            <a className={styles.btnSubmit} onClick={this.validarRegistro}>Registrarse</a>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  render(){\n    const {\n      modalRegistro,\n      modalSesion,\n      modalHeader,\n      modalMessage,\n    } = this.state\n    return (\n      <div className={styles.App}>\n        <header className={styles.AppHeader}>\n          <div className={styles.rowLogo}>\n            <img src={logo} className={styles.AppLogo} alt=\"logo\" />\n          </div>\n          <div className={styles.rowForm}>\n          <Tabs>\n            <TabList>\n              <Tab>Iniciar Sesión</Tab>\n              <Tab>Registro</Tab>\n            </TabList>\n            <TabPanel>\n              { this.login() }\n            </TabPanel>\n            <TabPanel>\n              { this.registro() }\n            </TabPanel>\n          </Tabs>\n          </div>\n          <Modal show={modalRegistro} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>¡Registro exitoso!</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {modalMessage}\n            </Modal.Body>\n          </Modal>\n          <Modal show={modalSesion} onHide={this.handleCloseSesion}>\n            <Modal.Header closeButton>\n              <Modal.Title>{modalHeader}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {modalMessage}\n            </Modal.Body>\n          </Modal>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react'\nimport { Row, Col, Button, Modal, Form, Table, Spinner } from 'react-bootstrap'\nimport axios from 'axios'\nimport TagsInput from 'react-tagsinput'\n\nimport 'react-tagsinput/react-tagsinput.css'\nimport styles from '../css/Buscador.module.css'\n\n\nimport tweelock from '../images/Tweelock.svg'\nimport analisis from '../images/Analisis.svg'\nconst TITULO_MODAL = 'BUSCADOR TWEELOCK'\nconst CUERPO_MODAL = 'Necesitas introducir el nombre de un usuario que quieras buscar.'\n\nconst TITULO_ERROR_MODAL = 'ERROR TWEELOCK'\n\nconst filtroLocation = [\n    'México',\n    'Mexico',\n    'méxico',\n    'mexico',\n    'D.F.',\n    'd.f.',\n    'D.f.',\n    'DF',\n    'Df',\n    'df',\n    'CDMX',\n    'cdmx',\n    'Ciudad de México',\n    'Ciudad de méxico',\n    'Ciudad de Mexico',\n    'Ciudad de mexico',\n    'ciudad de mèxico',\n    'Distrito Federal',\n    'distrito federal',\n    'Distrito federal',\n    'Coacalco',\n    'coacalco',\n    'Ecatepec',\n    'ecatepec',\n]\n\nclass Buscador extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            usuario: '',\n            modalAviso: false,\n            modalError: false,\n            mensajeError: '',\n            twitterUsers: [],\n            tweets: [],\n            vistaAnalisis: false,\n            nombreUsuario: '',\n            loading: false,\n\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ usuario: event.target.value})\n    }\n\n    handleClose = () => {\n        this.setState({ modalAviso: false, modalError: false, mensajeError: '' })\n    }\n\n    handleAnalisis = (name, screen_name, count) => {\n        this.setState({ vistaAnalisis: !this.state.vistaAnalisis })\n        if (!this.state.vistaAnalisis) { // esta en la vista de analisis\n            this.setState({ nombreUsuario: name })\n            const objetoUsuario = {\n                screenname: screen_name,\n                count: count,\n            }\n\n            axios.post('https://tweelock-api.azurewebsites.net/buscarTweets', objetoUsuario)\n                .then((res) => {\n                    console.log(JSON.stringify(res.data))\n                    this.setState({ tweets: res.data })\n                }).catch((error) => {\n                this.setState({ modalError: true, mensajeError: error })\n                console.log(error)\n            })\n        } else {\n            this.setState({ tweets: [] })\n        }\n    }\n\n    /* buscarTweets = () => {\n        const { tags } = this.state\n        let hashtaguno = tags[0]\n        let hashtagdos = tags[1]\n        /* Reemplazar simbolo # por el codigo correcto para la url %23 \n        if (hashtaguno !== undefined && hashtaguno.includes('#')) {\n            hashtaguno = tags[0].replace('#', '%23')\n        }\n\n        if (hashtagdos !== undefined && hashtagdos.includes('#')) {\n            hashtagdos = tags[1].replace('#', '%23')\n        }\n\n        if (tags.length === 0) {\n            this.setState({ modalAviso: true })\n        } else if (tags.length === 1) { // El usuario escribe una palabra\n            axios.get(`http://localhost:8000/oneTweet/${hashtaguno}`)\n                .then((response) => {\n                    console.log(response.data.statuses)\n                    this.setState({ tweets: response.data.statuses })\n                }).catch((error) => {\n                    // this.setState({ modalError: true, mensajeError: error })\n                    console.log(error)\n                })\n        } else { // El usuario escribe dos palabras\n            axios.get(`http://localhost:8000/twoTweets/${hashtaguno}&${hashtagdos}`)\n                .then((response) => {\n                    console.log(response.data.statuses)\n                }).catch((error) => {\n                    // this.setState({ modalError: true, mensajeError: error })\n                    console.log(error)\n                })\n        }\n    } */\n\n    buscarUsuarios = () => {\n        const { usuario } = this.state\n        const parametrosJSON = {\n            username: usuario,\n            count: 20,\n        }\n        console.log(parametrosJSON)\n\n        if (usuario === '') {\n            this.setState({ modalAviso: true })\n        } else {\n            this.setState({ loading: true })\n            axios.post('https://tweelock-api.azurewebsites.net/buscarUsuarios', parametrosJSON)\n            .then((res) => {\n                // this.setState({ twitterUsers: res.data, loading: false });\n                const usuarios = res.data\n                const arregloTemporal = []\n\n                usuarios.forEach((usuario) => {\n                    for (let i = 0; i < filtroLocation.length; i++) {\n                        if ((usuario.location).includes(filtroLocation[i])) {\n                            arregloTemporal.push(usuario)\n                        }\n                    }\n                })\n                // Quitamos valores duplicados en el arreglo\n                let set = new Set(arregloTemporal.map(JSON.stringify))\n                const arregloSinDuplicaciones = Array.from(set).map(JSON.parse)\n\n                this.setState({ twitterUsers: arregloSinDuplicaciones, loading: false });\n\n                console.log(JSON.stringify(this.state.twitterUsers));\n\n            }).catch((error) => {\n                // this.setState({ modalError: true, mensajeError: error })\n                console.log(error)\n            })\n        }\n    }\n\n    analyticsView = () => {\n        const { tweets, nombreUsuario } = this.state\n        return (\n            <div className={styles.contenedorAnalisis}>\n                <Row className={styles.buttonRegresar}>\n                    <Col sm={1} className={styles.columnaBotonRegresar}>\n                     <Button variant=\"primary\" onClick={this.handleAnalisis}>Regresar</Button>\n                    </Col>\n                    <Col sm={9} className={styles.columnaTitulo}>\n                      <p className={styles.tituloAnalisis}>Análisis del usuario {nombreUsuario}</p>\n                    </Col>\n                    <Col sm={2} className={styles.columnaBotonRegresar}>\n                     <Button variant=\"danger\">Guardar en PDF</Button>\n                    </Col>\n                </Row>\n                <Row className={styles.columnaAnalisis}>\n                    <img src={analisis} className={styles.imagenAnalisis} alt=\"prototipo de analisis\"/>\n                </Row>\n                <Row className={styles.tablaAnalisis}>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <td>Tweet id</td>\n                                <td>Usuario</td>\n                                <td>Texto</td>\n                                <td>Clasificación</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {(tweets !== null && tweets.length === 0) ? null :\n                            tweets.map((tweet) => {\n                                if (tweet === null) {\n                                    return null;\n                                } \n                                return(\n                                    <tr>\n                                        <td>{tweet.tweetId}</td>\n                                        <td>{tweet.user}</td>\n                                        <td>{tweet.msg}</td>\n                                        <td>{tweet.classification.tag_name}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </tbody>\n                    </Table>\n                </Row>\n            </div>\n        )\n    }\n\n    usersTable = () => {\n        const { twitterUsers } = this.state\n        return(\n            <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <td>Usuario id</td>\n                            <td>Nombre</td>\n                            <td>Screen Name</td>\n                            <td>Localización del usuario</td>\n                            <td>Análisis</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (twitterUsers.length === 0) ? null :\n                                twitterUsers.map((user) => {\n                                    return (\n                                        <tr>\n                                            <td>{user.id_str}</td>\n                                            <td>{user.name}</td>\n                                            <td>{user.screen_name}</td>\n                                            <td>{user.location}</td>\n                                            <td><Button variant=\"primary\" onClick={() => this.handleAnalisis(user.name, user.screen_name, 50)}>Ver análisis</Button></td>\n                                        </tr>\n                                    )\n                                })\n                        }\n                    </tbody>\n                </Table>\n        )\n    }\n\n    render() {\n        const { usuario, modalAviso, modalError, mensajeError, vistaAnalisis, loading } = this.state\n        return(\n            <div className={styles.container}>\n                <Row className={styles.header}> \n                    <Col className={styles.columnaLogo}>\n                        <img src={tweelock} className={styles.imgLogo}/>\n                    </Col>\n                    <Col className={styles.columnaBuscador}>\n                        {/* <TagsInput value={usuario} onChange={this.handleChange} maxTags={1} inputProps={{ className: 'react-tagsinput-input', placeholder: 'Buscar usuario' }}/> */}\n                        <Form.Control type=\"text\" placeholder=\"Buscar usuario\" value={usuario} onChange={this.handleChange} />\n                    </Col>\n                    <Col className={styles.columnaBoton}>\n                        {\n                            loading ? <Spinner animation=\"grow\" variant=\"light\" /> : <Button variant=\"dark\" onClick={this.buscarUsuarios}>Buscar</Button>\n                        }\n                    </Col>\n                </Row>\n                <Row className={styles.body}>\n                    {\n                        vistaAnalisis ? this.analyticsView() : this.usersTable()\n                    }\n                </Row>\n                <Modal show={modalAviso} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>{TITULO_MODAL}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {CUERPO_MODAL}\n                    </Modal.Body>\n                </Modal>\n                <Modal show={modalError} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>{TITULO_ERROR_MODAL}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {mensajeError}\n                    </Modal.Body>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Buscador\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Login from './Login.js'\nimport Buscador from './Buscador.js'\nclass App extends Component {\n\n  render(){\n    return(\n      <Switch>\n        <Route exact path=\"/\">\n          <Buscador />\n        </Route>\n        <Route path=\"/Buscador\">\n          <Buscador />\n        </Route>\n      </Switch>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './css/index.css';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7860ee4c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3b5cp\",\"AppLogo\":\"App_AppLogo__15FhL\",\"AppHeader\":\"App_AppHeader__1e3aq\",\"AppLink\":\"App_AppLink__t-O5Q\",\"rowLogo\":\"App_rowLogo__1p8qe\",\"rowForm\":\"App_rowForm__1b3gy\",\"columnBotonLogin\":\"App_columnBotonLogin__7L4jp\",\"columnSpace\":\"App_columnSpace__4pD3a\",\"botonIngresar\":\"App_botonIngresar__ED4gH\",\"botonRegistrarse\":\"App_botonRegistrarse__3uJog\",\"btnSubmit\":\"App_btnSubmit__2u2DC\",\"contenedorSubmit\":\"App_contenedorSubmit__1K3HA\",\"username\":\"App_username__q8IIE\",\"password\":\"App_password__1MVEi\",\"textoValidacion\":\"App_textoValidacion__1Lsnh\",\"field\":\"App_field__1UUai\",\"formularioRegistro\":\"App_formularioRegistro__1gEKF\",\"error\":\"App_error__1nVxy\"};","module.exports = __webpack_public_path__ + \"static/media/Tweelock.7709580a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Analisis.47f28ff1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Buscador_container__3ldD-\",\"contenedorAnalisis\":\"Buscador_contenedorAnalisis__2TBdO\",\"header\":\"Buscador_header__10DBJ\",\"body\":\"Buscador_body__2BHm3\",\"columnaLogo\":\"Buscador_columnaLogo__3kwXh\",\"imgLogo\":\"Buscador_imgLogo__ZGcL3\",\"columnaBuscador\":\"Buscador_columnaBuscador__Hw38c\",\"columnaBoton\":\"Buscador_columnaBoton__HjMty\",\"rowTweets\":\"Buscador_rowTweets__3eVXU\",\"colSpace\":\"Buscador_colSpace__1djHB\",\"colTweets\":\"Buscador_colTweets__1DdmO\",\"buttonRegresar\":\"Buscador_buttonRegresar__yvqCK\",\"tablaAnalisis\":\"Buscador_tablaAnalisis__3xlDx\",\"analisis\":\"Buscador_analisis__3_QuJ\",\"tituloAnalisis\":\"Buscador_tituloAnalisis__hBuC6\",\"columnaBotonRegresar\":\"Buscador_columnaBotonRegresar__qGYmt\",\"columnaTitulo\":\"Buscador_columnaTitulo__3Cl51\",\"columnaAnalisis\":\"Buscador_columnaAnalisis__Gfskw\",\"imagenAnalisis\":\"Buscador_imagenAnalisis__2ob1P\"};"],"sourceRoot":""}